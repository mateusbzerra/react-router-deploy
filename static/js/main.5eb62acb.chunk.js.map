{"version":3,"sources":["App.js","components/Form/TextInput.js","routes/routes.js","components/Test/Test.js","components/CreditCardForm/CreditCardForm.js","routes/ClientRoutes.js","index.js"],"names":["App","route","sx","maxWidth","mx","px","renderRoutes","routes","TextInput","label","props","useFormikContext","useField","field","meta","htmlFor","id","name","className","touched","error","color","component","path","exact","formik","useFormik","initialValues","number","cvc","expiry","validationSchema","Yup","shape","required","onSubmit","values","alert","JSON","stringify","handleSubmit","value","focused","pt","variant","ClientRoutes","basename","flexDirection","alignItems","p","fontWeight","to","ReactDOM","render","StrictMode","theme","preset","fallback","document","getElementById"],"mappings":"iNAkBeA,MAdf,YAAyB,IAAVC,EAAS,EAATA,MACb,OACE,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAU,IACVC,GAAI,OACJC,GAAI,IAGLC,YAAaL,EAAMM,W,iDCYXC,EAhBG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,4BAC1BC,cACOC,YAASF,IAFU,mBAElCG,EAFkC,KAE3BC,EAF2B,KAIzC,OACE,oCACE,kBAAC,IAAD,CAAOC,QAASL,EAAMM,IAAMN,EAAMO,MAAOR,GACzC,kBAAC,IAAD,eAAOS,UAAU,cAAiBL,EAAWH,IAC5CI,EAAKK,SAAWL,EAAKM,MACpB,kBAAC,IAAD,CAAMC,MAAM,QAAQP,EAAKM,OACvB,O,QCfGb,EAAS,CACpB,CACEe,UAAWtB,EACXO,OAAQ,CACN,CACEgB,KAAM,QACNC,OAAO,EACPF,UCTY,kBAAM,sCDWpB,CACEC,KAAM,eACNC,OAAO,EACPF,UERsB,WAC5B,IAAMG,EAASC,YAAU,CACvBC,cAAe,CACbV,KAAM,GACNW,OAAQ,GACRC,IAAK,GACLC,OAAQ,IAEVC,iBAAkBC,MAAaC,MAAM,CACnChB,KAAMe,MAAaE,SAAS,0BAC5BN,OAAQI,MAAaE,SAAS,4BAC9BL,IAAKG,MAAaE,SAAS,yBAC3BJ,OAAQE,MAAaE,SAAS,8BAEhCC,SAAU,SAAAC,GACRC,MAAMC,KAAKC,UAAUH,EAAQ,KAAM,OAI/BI,EAAyBf,EAAzBe,aAAcJ,EAAWX,EAAXW,OAEtB,OACE,kBAAC,IAAD,CAAgBK,MAAOhB,GACrB,0BAAMU,SAAUK,GACd,0CACA,kBAAC,IAAD,CACEX,IAAKO,EAAOP,IACZC,OAAQM,EAAON,OACfY,SAAS,EACTzB,KAAMmB,EAAOnB,KACbW,OAAQQ,EAAOR,SAEjB,kBAAC,IAAD,CAAKe,GAAG,QACN,6BACE,kBAAC,EAAD,CAAW1B,KAAK,OAAOR,MAAM,UAE/B,6BACE,kBAAC,EAAD,CAAWQ,KAAK,SAASR,MAAM,YAEjC,6BACE,kBAAC,EAAD,CAAWQ,KAAK,SAASR,MAAM,mBAEjC,6BACE,kBAAC,EAAD,CAAWQ,KAAK,MAAMR,MAAM,UAGhC,kBAAC,IAAD,CAAQmC,QAAQ,aAAhB,iB,QCvBOC,EAxBM,SAAC,GAAc,EAAZ5C,MACtB,OACE,kBAAC,IAAD,CAAe6C,SAAS,wBACtB,kBAAC,IAAD,CACE5C,GAAI,CACFC,SAAU,IACVC,GAAI,OACJC,GAAI,IAGN,kBAAC,IAAD,CAAM0C,cAAc,SAAS1C,GAAI,EAAG2C,WAAW,UAC7C,kBAAC,IAAD,CAAMC,EAAG,EAAGC,WAAW,QAAvB,kBAGA,kBAAC,IAAD,CAAK9C,GAAG,SACR,kBAAC,IAAD,CAAM+C,GAAG,eAAT,eACA,kBAAC,IAAD,CAAMA,GAAG,QAAT,UAGH7C,YAAaC,MCpBpB6C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAeC,MAAOC,KACpB,kBAAC,WAAD,CAAUC,SAAU,wCAClB,kBAAC,EAAD,SAINC,SAASC,eAAe,U","file":"static/js/main.5eb62acb.chunk.js","sourcesContent":["import React from 'react'\nimport { renderRoutes } from 'react-router-config'\nimport { Box } from 'rebass'\n\nfunction App({ route }) {\n  return (\n    <Box\n      sx={{\n        maxWidth: 512,\n        mx: 'auto',\n        px: 3\n      }}\n    >\n      {renderRoutes(route.routes)}\n    </Box>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport { useField, useFormikContext } from 'formik';\nimport {\n  Label,\n  Input,\n} from '@rebass/forms'\nimport { Text } from 'rebass'\n\n\nconst TextInput = ({ label, ...props }) => {\n  const formik = useFormikContext();\n  const [field, meta] = useField(props);\n  // which we can spread on <input> and also replace ErrorMessage entirely.\n  return (\n    <>\n      <Label htmlFor={props.id || props.name}>{label}</Label>\n      <Input className=\"text-input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Text color=\"#f00\">{meta.error}</Text>\n      ) : null}\n    </>\n  );\n};\n\n\nexport default TextInput;","import App from '../App'\nimport CreditCardForm from '../components/CreditCardForm/CreditCardForm'\nimport Test from '../components/Test/Test'\n\nexport const routes = [\n  {\n    component: App,\n    routes: [\n      {\n        path: '/test',\n        exact: true,\n        component: Test\n      },\n      {\n        path: '/credit-card',\n        exact: true,\n        component: CreditCardForm\n      }\n    ]\n  }\n]\n","import React from  'react'\n\nexport const Test = () => <h1>test</h1>\n\nexport default Test","import React from 'react'\nimport Cards from 'react-credit-cards'\nimport 'react-credit-cards/es/styles-compiled.css'\nimport { useFormik, FormikProvider } from 'formik'\nimport { Box, Button } from 'rebass'\nimport TextInput from '../Form/TextInput'\nimport * as Yup from 'yup'\n\nexport const CreditCardForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n      cvc: '',\n      expiry: ''\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required('field name is required'),\n      number: Yup.number().required('field number is required'),\n      cvc: Yup.string().required('field cvc is required'),\n      expiry: Yup.string().required('field expiry is required')\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2))\n    }\n  })\n\n  const { handleSubmit, values } = formik\n\n  return (\n    <FormikProvider value={formik}>\n      <form onSubmit={handleSubmit}>\n        <h1>Formulario</h1>\n        <Cards\n          cvc={values.cvc}\n          expiry={values.expiry}\n          focused={true}\n          name={values.name}\n          number={values.number}\n        />\n        <Box pt=\"50px\">\n          <div>\n            <TextInput name=\"name\" label=\"name\" />\n          </div>\n          <div>\n            <TextInput name=\"number\" label=\"number\" />\n          </div>\n          <div>\n            <TextInput name=\"expiry\" label=\"date validate\" />\n          </div>\n          <div>\n            <TextInput name=\"cvc\" label=\"cvc\" />\n          </div>\n        </Box>\n        <Button variant=\"secondary\">Submit</Button>\n      </form>\n    </FormikProvider>\n  )\n}\n\nexport default CreditCardForm\n","import React from \"react\";\nimport { routes } from \"./routes\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Box, Flex, Text } from \"rebass\";\nimport { Link } from \"react-router-dom\";\nimport { renderRoutes } from \"react-router-config\";\n\nconst ClientRoutes = ({ route }) => {\n  return (\n    <BrowserRouter basename=\"/react-router-deploy\">\n      <Box\n        sx={{\n          maxWidth: 512,\n          mx: \"auto\",\n          px: 3\n        }}\n      >\n        <Flex flexDirection=\"column\" px={2} alignItems=\"center\">\n          <Text p={2} fontWeight=\"bold\">\n            FORMIK STUDIES\n          </Text>\n          <Box mx=\"auto\" />\n          <Link to=\"credit-card\">Credit Card</Link>\n          <Link to=\"test\">Test</Link>\n        </Flex>\n      </Box>\n      {renderRoutes(routes)}\n    </BrowserRouter>\n  );\n};\n\nexport default ClientRoutes;\n","import React, { Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport preset from '@rebass/preset'\nimport { ThemeProvider } from 'emotion-theming'\nimport ClientRoutes from './routes/ClientRoutes'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={preset}>\n      <Suspense fallback={<h1>Loading</h1>}>\n        <ClientRoutes />\n      </Suspense>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}